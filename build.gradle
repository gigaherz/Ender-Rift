plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.42-beta'
    id 'io.github.goooler.shadow' version '8.1.7'
}

version = "2.9.2.1"
group= "dev.gigaherz.enderrift"

var minecraftVersionResolver = project.neoForge.version.map { "1." + (it =~ /^(\d+(?:\.[1-9]\d*|))\./)[0][1] }
base {
    archivesName = minecraftVersionResolver.map { "EnderRift-${it}" }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    mavenCentral()
    mavenLocal()
    maven {
        url "$projectDir/../CommonMaven"
    }
    maven {
        url 'https://dogforce-games.com/maven'
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "https://github.com/TehNut/temporary-maven-thing/tree/master/maven"
    }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // JEI
        url "https://maven.blamejared.com/"
        // fallback: url = "https://modmaven.dev"
    }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        // For Gradle 5.1 and above, limit it to just AE2
        content {
            includeGroup 'appeng'
        }
    }
    flatDir { dirs 'deps' }
}

neoForge {
    version = "21.3.19-beta"

    runs {
        // applies to all the run configs below
        configureEach {
            gameDirectory = project.file('run')
            logLevel = org.slf4j.event.Level.DEBUG
            //jvmArgument "-Dmixin.debug.export=true"
            //jvmArgument "-Dmixin.debug.verbose=true"
        }

        client {
            client()
        }

        server {
            server()
        }

        data {
            data()
            programArguments.addAll '--mod', 'enderrift', '--all', '--output', file('src/main/generated_resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
    }

    mods {
        thismod {
            sourceSet(sourceSets.main)
        }
    }

    parchment {
        minecraftVersion = "1.21"
        mappingsVersion = "2024.11.10"
    }
}

configurations {
    shade
}

dependencies {
    compileOnly 'org.jetbrains:annotations:20.1.0'

    //runtimeOnly fg.deobf("dev.gigaherz.guidebook:Guidebook-1.19.1:3.6.1")

    implementation"dev.gigaherz.graph:GraphLib3:3.0.4"
    shade ("dev.gigaherz.graph:GraphLib3:3.0.4") {
        transitive = false
    }

    implementation "com.googlecode.concurrent-locks:concurrent-locks:1.0.0"
    shade "com.googlecode.concurrent-locks:concurrent-locks:1.0.0"
    additionalRuntimeClasspath  "com.googlecode.concurrent-locks:concurrent-locks:1.0.0"

    // Jade (WAILA) - [NeoForge 1.21] 15.0.4
    compileOnly "curse.maven:jade-324717:5846076"
    runtimeOnly "curse.maven:jade-324717:5846076"

    //compileOnly "appeng:appliedenergistics2-neoforge:19.0.0-alpha:api"
    //runtimeOnly "appeng:appliedenergistics2-neoforge:19.0.0-alpha"

    //compileOnly "mezz.jei:jei-1.20.4-common-api:17.3.0.49"
    //runtimeOnly "mezz.jei:jei-1.20.4-common:17.3.0.49"
    //compileOnly "mezz.jei:jei-1.20.4-neoforge-api:17.3.0.49"
    //runtimeOnly "mezz.jei:jei-1.20.4-neoforge:17.3.0.49"

    // TheOneProbe - 1.20.4_neo-11.0.2
    //compileOnly "curse.maven:the-one-probe-245211:5159289"
    //runtimeOnly "curse.maven:the-one-probe-245211:5159289"
}

jar {
    archiveClassifier = 'slim'
}

shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
    relocate 'dev.gigaherz.graph3', "${project.group}.shadow.graphlib3"
    relocate 'com.googlecode.concurentlocks', "${project.group}.shadow.concurentlocks"
}

jar {
    from(files('LICENSE.txt'))

    manifest {
        attributes([
                "Specification-Title": "enderrift",
                "Specification-Vendor": "gigaherz",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": "enderrift",
                "Implementation-Version": project.version,
                "Implementation-Vendor" :"gigaherz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

artifacts {
    archives shadowJar
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}